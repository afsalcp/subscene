/// <reference types="node" />
import { URL } from 'url';
import { ConnectionOptions } from 'tls';
import http, { ClientRequest, ClientRequestArgs } from 'http';
import https from 'https';
interface AgentOptions extends http.AgentOptions {
    proxy: string | URL;
    disableConnect?: boolean;
}
export declare class HttpRegularProxyAgent extends http.Agent {
    proxy: URL;
    constructor(options: AgentOptions);
    addRequest(request: ClientRequest, options: ClientRequestArgs): void;
}
export declare class HttpProxyAgent extends http.Agent {
    proxy: URL;
    constructor(options: AgentOptions);
    createConnection(options: ConnectionOptions, callback: (error: Error | undefined, socket?: unknown) => void): void;
}
export declare class HttpsProxyAgent extends https.Agent {
    proxy: URL;
    constructor(options: AgentOptions);
    createConnection(options: ConnectionOptions, callback: (error: Error | undefined, socket?: unknown) => void): void;
}
export {};
//# sourceMappingURL=h1-proxy-agent.d.ts.map