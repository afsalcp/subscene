"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.http2Hook = void 0;
const http2_wrapper_1 = require("http2-wrapper");
const resolve_protocol_1 = require("../resolve-protocol");
function http2Hook(options) {
    const { proxyUrl, sessionData } = options.context;
    if (options.http2 && options.url.protocol !== 'http:') {
        options.request = (url, requestOptions, callback) => {
            const typedRequestOptions = requestOptions;
            if (proxyUrl) {
                typedRequestOptions.resolveProtocol = (0, resolve_protocol_1.createResolveProtocol)(proxyUrl, sessionData);
            }
            return (0, http2_wrapper_1.auto)(url, typedRequestOptions, callback);
        };
    }
    else {
        // Restore to default.
        // Otherwise it would use the `request` function above after redirects.
        options.request = undefined;
    }
}
exports.http2Hook = http2Hook;
//# sourceMappingURL=http2.js.map